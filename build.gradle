buildscript {
    ext {
        domainName = "api.sample"
        springBootVersion = "1.5.2.RELEASE"
        javaVersion = 1.8
        cloudVersion = "Dalston.SR4"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.1"
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "war"
apply plugin: "maven"
apply plugin: "maven-publish"

sourceCompatibility = "${javaVersion}"
targetCompatibility = "${javaVersion}"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations {
    providedRuntime
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, "seconds"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${cloudVersion}"
    }
}

dependencies {
    compileOnly("org.projectlombok:lombok:1.18.6")
    compileOnly("com.fasterxml.jackson.core:jackson-databind:2.8.7")

    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-devtools")

    compileOnly("org.springframework.boot:spring-boot-configuration-processor")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    compile("org.apache.commons:commons-lang3:3.1")

    // swagger
    compile("io.springfox:springfox-swagger-ui:2.8.0")
    compile("io.springfox:springfox-swagger2:2.8.0")

    //kafka
    compile("org.apache.kafka:kafka-clients:0.10.1.1")
    compile("org.springframework.cloud:spring-cloud-starter-sleuth")
    compile("org.springframework.cloud:spring-cloud-starter-zipkin")
}

repositories {
    mavenCentral()
}

